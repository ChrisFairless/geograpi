% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gss_identify_vintage.R
\name{gss_identify_vintage}
\alias{gss_identify_vintage}
\title{Identify the vintage of a set of GSS codes}
\usage{
gss_identify_vintage(data, col_gss = "gss_code", test_vintage = NULL)
}
\arguments{
\item{data}{A vector of GSS codes or a data frame.}

\item{col_gss}{If \code{data} is a data frame, the name of the column
containing gss_codes.}

\item{test_vintage}{Either NULL, a year, or a date giving the hypothesised
vintage of the data. The returned list contains elements confirming whether
this vintage is compatible with the input data. When this is provided as a
year, it is assumed to be December 31 of that year, the date usually
referred to by single-year vintages.}
}
\value{
A list with several elements: \code{vintage_start} is the earliest
  date compatible with the input data, and \code{vintage_end} is the latest.
  \code{vintage_years} is a vector of years where the 31 December is within
  the interval between \code{vintage_start} and \code{vintage_end}.
  \code{vintage_current} is a boolean indicating whether the data is current.
  \code{test_vintage} is the date given by the input parameter
  \code{test_vintage} and \code{test_valid} is a boolean denoting whether the
  vintage is consistent with the input data. When no vintage is consistent
  with these data these parameters take \code{NA}.
}
\description{
Given a data frame or a vector containing GSS codes, return a list with
values of the earliest and latest dates all input codes were valid, plus
other data.
}
\examples{
\dontrun{
  # Find the vintage of the City of London
  gss_identify_vintage("E09000001")

  # Check the wards in a data frame are consistent
  x <- data.frame(name = c("a", "b"),
                  gss_code = c("E05000610", "E05000615"))
  gss_identify_vintage(x, col_gss = "gss_code", test_vintage = 2011)
}
}
